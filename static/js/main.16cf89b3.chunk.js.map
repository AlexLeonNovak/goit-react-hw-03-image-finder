{"version":3,"sources":["components/Modal/Modal.module.css","components/Loader/Loader.module.css","services/pixabay-api.js","components/Modal/Modal.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Loader/Loader.js","components/LoadMore/LoadMore.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","axios","defaults","baseURL","interceptors","request","use","params","fetchImages","searchQuery","page","pageSize","per_page","q","get","then","response","data","hits","modalRoot","document","getElementById","Modal","handleKeyDown","e","code","props","onClose","handleBackdropClick","currentTarget","target","window","addEventListener","this","removeEventListener","createPortal","className","styles","Modal__backdrop","onClick","Modal__content","children","Component","Searchbar","state","handleInputChange","setState","value","handleSubmit","preventDefault","onSubmit","type","autoComplete","autoFocus","placeholder","onChange","ImageGalleryItem","id","alt","src","ImageGallery","items","onItemClick","map","webformatURL","tags","defaultProps","Loader","Preloader","LoadMore","onLoadMore","App","images","showModal","largeImgUrl","isLoading","showLargeImage","imageData","find","image","largeImageURL","toggleModal","setSearchQuery","getImages","prevState","finally","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","isShowModal","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.16cf89b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal__backdrop\":\"Modal_Modal__backdrop__1GdnR\",\"Modal__content\":\"Modal_Modal__content__1pq2n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader\":\"Loader_Preloader__QV6pc\",\"Loader\":\"Loader_Loader__3e9AC\",\"spin\":\"Loader_spin__3OSuF\"};","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\naxios.interceptors.request.use(request => {\r\n    request.params['key'] = '21036025-0af45920d07b4b5893c60df1e';\r\n    return request;\r\n})\r\n// axios.defaults.params['key'] = '21036025-0af45920d07b4b5893c60df1e';\r\n\r\nconst buildGetParamString = (params) => {\r\n    let str = [];\r\n    for (let key in params) {\r\n        if (params.hasOwnProperty(key)) {\r\n            str.push(`${key}=${params[key]}`);\r\n        }\r\n    }\r\n    return str.join('&');\r\n}\r\n\r\nexport const fetchImages = ({searchQuery = '', page = 1, pageSize = 10} = {}) => {\r\n    const params = {\r\n        page: page,\r\n        per_page: pageSize,\r\n        q: searchQuery\r\n    };\r\n    return axios.get('', {params})\r\n        .then(response => response.data.hits);\r\n}\r\n","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport styles from './Modal.module.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst modalRoot = document.getElementById('modal-root');\r\n\r\nexport class Modal extends Component {\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n            this.props.onClose();\r\n        }\r\n    };\r\n\r\n    handleBackdropClick = e => {\r\n        if (e.currentTarget === e.target) {\r\n            this.props.onClose();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return createPortal(\r\n            <div className={styles.Modal__backdrop} onClick={this.handleBackdropClick}>\r\n                <div className={styles.Modal__content}>{this.props.children}</div>\r\n            </div>,\r\n            modalRoot,\r\n        );\r\n    }\r\n}\r\n\r\nModal.propTypes = {\r\n    onClose: PropTypes.func.isRequired\r\n}\r\n","import {Component} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class Searchbar extends Component {\r\n\r\n    state = {\r\n        searchQuery: ''\r\n    }\r\n\r\n    handleInputChange = ({target}) => {\r\n        this.setState({searchQuery: target.value})\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state.searchQuery);\r\n    };\r\n\r\n    render() {\r\n        const { searchQuery } = this.state;\r\n\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className=\"SearchForm-input\"\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        onChange={this.handleInputChange}\r\n                        value={searchQuery}\r\n                    />\r\n                </form>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired\r\n}\r\n","import PropTypes from \"prop-types\";\r\n\r\nexport const ImageGalleryItem = ({id, alt, src, onClick}) => {\r\n    return (\r\n        <li className=\"ImageGalleryItem\" onClick={() => onClick(id)}>\r\n            <img src={src} alt={alt} className=\"ImageGalleryItem-image\" />\r\n        </li>\r\n    )\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n    src: PropTypes.string.isRequired,\r\n    // largeImageURL: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired\r\n}\r\n","import {ImageGalleryItem} from \"../ImageGalleryItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const ImageGallery = ({items, onItemClick}) => {\r\n    return (\r\n        <ul className=\"ImageGallery\">\r\n            {items.map(({ id, webformatURL, tags }) =>\r\n                <ImageGalleryItem\r\n                    key={id}\r\n                    id={id}\r\n                    src={webformatURL}\r\n                    onClick={onItemClick}\r\n                    alt={tags}\r\n                />\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n\r\nImageGallery.defaultProps = {\r\n    items: [],\r\n    onItemClick: () => {}\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    items: PropTypes.array,\r\n    onItemClick: PropTypes.func\r\n}\r\n","import styles from './Loader.module.css';\r\n\r\nexport const Loader = () => (\r\n    <div className={styles.Preloader}>\r\n        <div className={styles.Loader} />\r\n    </div>\r\n)\r\n","import PropTypes from 'prop-types';\r\n\r\nexport const LoadMore = ({onLoadMore}) => (\r\n    <div className=\"Button__wrap\">\r\n        <button type=\"button\" className=\"Button\" onClick={onLoadMore}>Load more</button>\r\n    </div>\r\n)\r\n\r\nLoadMore.propTypes = {\r\n    onLoadMore: PropTypes.func.isRequired\r\n}\r\n","import './App.css';\nimport {Component} from \"react\";\n\nimport {fetchImages} from './services/pixabay-api';\n\nimport {Modal} from \"./components/Modal\";\nimport {Searchbar} from \"./components/Searchbar\";\nimport {ImageGallery} from \"./components/ImageGallery\";\nimport {Loader} from \"./components/Loader\";\nimport {LoadMore} from \"./components/LoadMore\";\n\nclass App extends Component {\n\n  state = {\n    images: [],\n    showModal: false,\n    largeImgUrl: '',\n    searchQuery: '',\n    page: 1,\n    isLoading: true\n  };\n\n  componentDidMount() {\n    this.getImages();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.getImages();\n    }\n    if (prevState.page !== this.state.page) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  showLargeImage = (id) => {\n    const {images} = this.state;\n    const imageData = images.find(image => image.id === id);\n    this.setState({largeImgUrl: imageData.largeImageURL});\n    this.toggleModal();\n  }\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  setSearchQuery = searchQuery => {\n    this.setState({searchQuery, images: [], page: 1});\n  }\n\n  getImages = () => {\n    const {searchQuery, page} = this.state;\n    this.setState({isLoading: true})\n    fetchImages({searchQuery, page})\n      .then(images => {\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images],\n          page: prevState.page + 1\n        }));\n      }).finally(() => this.setState({isLoading: false}));\n  }\n\n\n  render() {\n    const {showModal, images, largeImgUrl, isLoading} = this.state;\n    const isShowModal = showModal && largeImgUrl;\n\n    return (\n        <>\n          <Searchbar onSubmit={this.setSearchQuery} />\n\n          {images.length\n              ? <>\n                <ImageGallery items={images} onItemClick={this.showLargeImage}/>\n                <LoadMore onLoadMore={this.getImages} />\n              </>\n              : <Loader />\n          }\n\n          {isLoading && <Loader />}\n\n          {isShowModal &&\n          <Modal onClose={this.toggleModal}>\n            <img src={largeImgUrl} alt={largeImgUrl}/>\n          </Modal>\n          }\n        </>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}